<views:MvxWpfView 
             xmlns:views="clr-namespace:MvvmCross.Platforms.Wpf.Views;assembly=MvvmCross.Platforms.Wpf"                        
             x:Class="CarAuctionScraper.WPF.Views.MainOffersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:CarAuctionScraper.WPF.Views"
             xmlns:converters="clr-namespace:CarAuctionScraper.WPF.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validators="clr-namespace:CarAuctionScraper.WPF.Validators"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
    >
    <views:MvxWpfView.Resources>
        <converters:StringToBrushConverter x:Key="StringToBrushConverter" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ImageConverter x:Key="ImageConverter" DecodePixelWidth="200"/>
        <converters:DistanceToKmConverter x:Key="DistanceToKmConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverterCustom"/>
        <converters:BooleanToVisibilityConverterTest x:Key="BooleanToVisibilityConverterCustom2"/>
    </views:MvxWpfView.Resources>


    <materialDesign:DrawerHost
        Margin="2"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        BorderThickness="2"
        BorderBrush="{DynamicResource MaterialDesignDivider}"
        IsTopDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
        >


        <materialDesign:DrawerHost.TopDrawerContent>
            <DockPanel
                      Margin="16"
                      HorizontalAlignment="Stretch"
                >
                <ToggleButton DockPanel.Dock="Left"
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        HorizontalAlignment="Left" 
                        Margin="16"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>

                <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <materialDesign:PackIcon Margin="5 0 5 0" Kind="Web" Foreground="{Binding ElementName=NameTextBox, Path=BorderBrush}" VerticalAlignment="Bottom"/>
                    <TextBox
                        Margin="5 -4 0 0"
                        x:Name="NameTextBox"
                        materialDesign:HintAssist.Hint="Link do oferty" MinWidth="300" HorizontalContentAlignment="Center" VerticalAlignment="Bottom">
                        <TextBox.Text>
                            <Binding
                                Path="Url"
                                UpdateSourceTrigger="PropertyChanged">
                                <!--<Binding.ValidationRules>
                                    <validators:UrlValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>-->
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                    <Button
                        Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                        Margin="5 0 5 0"
                        ToolTip="Dodaj ofertę"
                        Command="{Binding GetDataFromWebpageCommand}"                            
                        >
                        <materialDesign:PackIcon
                            Kind="Plus"
                            Height="24"
                            Width="24" 
                        />
                    </Button>
                </StackPanel>
            </DockPanel>
        </materialDesign:DrawerHost.TopDrawerContent>

        <DockPanel>


            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>



                <materialDesign:ColorZone Grid.Row="0"
              Mode="PrimaryLight"
              Padding="16">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0"
                            Orientation="Horizontal">
                            <ToggleButton x:Name="MenuToggleButton"
                    Style="{DynamicResource MaterialDesignHamburgerToggleButton}" 
                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}" 
                    CommandParameter="{x:Static Dock.Top}"/>
                            <TextBlock
                                VerticalAlignment="Center"
                                Margin="16 0 0 0">
                                Car Auction Scraper
                            </TextBlock>
                        </StackPanel>

                        <Button
                        Grid.Column="1"
                        Style="{StaticResource MaterialDesignFloatingActionMiniDarkButton}"
                        Margin="5 0 5 0"
                        ToolTip="Odśwież wszystkie oferty"
                        Command="{Binding UpdatePricesCommand}"
                        >
                            <materialDesign:PackIcon
                            Kind="Refresh"
                            Height="24"
                            Width="24" 
                        />
                        </Button>
                    </Grid>
                </materialDesign:ColorZone>

                <materialDesign:Card Grid.Row="1" Margin="10" Padding="10">
                    <StackPanel>
                        <TextBlock Text="Cechy wspólne:"/>

                        <Separator
                    Style="{StaticResource MaterialDesignLightSeparator}" />
                        <ItemsControl ItemsSource="{Binding CommonFeatures}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Chip Content="{Binding Name}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>

                </materialDesign:Card>
                <materialDesign:Card Grid.Row="2" Margin="10 0 10 10" Padding="10">

                    <DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Offers}" SelectedItem="{Binding SelectedOffer}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" IsReadOnly="True"
                      VerticalGridLinesBrush="LightGray" HorizontalGridLinesBrush="LightGray" VirtualizingPanel.ScrollUnit="Pixel"
                  CanUserAddRows="False" CanUserDeleteRows="False"
                  materialDesign:DataGridAssist.CellPadding="4 2 2 2"
                  materialDesign:DataGridAssist.ColumnHeaderPadding="4 2 2 2"
                  >

                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Foreground" Value="Black"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>

                            <DataGridTemplateColumn Header="" MaxWidth="240">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Image Grid.Row="0" Margin="0 5 0 0" Visibility="{Binding ImageExists, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Source="{Binding ImageThumbnail, Converter={StaticResource ImageConverter}}"
                                   />
                                            <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal">

                                                <Button Margin="3 5 3 5" Height="30" Width="30"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Otwórz szczegóły"
                                        Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:MvxWpfView}}, Path= DataContext.NavigateToOfferViewCommand}"
                                        >
                                                    <materialDesign:PackIcon
                                            Kind="EllipsisHorizontal"
                                            Height="16"
                                            Width="16" />
                                                </Button>

                                                <Button Margin="3 5 3 5" Height="30" Width="30"
                                                    Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                                    ToolTip="Idź do strony www"
                                                    Command="{Binding NavigateToUrlCommand}"
                                                    Visibility="{Binding IsFinished, 
                                                        Converter={StaticResource BooleanToVisibilityConverterCustom}, 
                                                        ConverterParameter=true}"
                                                >
                                                    <materialDesign:PackIcon
                                    Kind="Web"
                                    Height="16"
                                    Width="16" />
                                                </Button>

                                                <Button Margin="3 5 3 5" Height="30" Width="30"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Odległość"
                                                >
                                                    <Grid>
                                                        <materialDesign:PackIcon HorizontalAlignment="Center"
                                                Kind="MapMarkerRadius"
                                                Height="12"
                                                Width="12" />
                                                        <TextBlock Text="{Binding Distance}" FontSize="7" Margin="0 12 0 0" HorizontalAlignment="Center"/>
                                                    </Grid>
                                                </Button>

                                                <Button Margin="3 5 3 5"  Height="30" Width="30"
                                            Visibility="{Binding IsPolish, Converter={StaticResource BooleanToVisibilityConverterCustom}}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Kraj pochodzenia: Polska"
                                                >
                                                    <TextBlock Text="PL" FontSize="12"/>
                                                </Button>
                                                <Button Margin="3 5 3 5" Height="30" Width="30"
                                            Visibility="{Binding IsPolish, Converter={StaticResource BooleanToVisibilityConverterCustom}, ConverterParameter=true}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                            Background="Gray"
                                            BorderBrush="Gray"
                                        ToolTip="Kraj pochodzenia: nie z Polski"
                                                >
                                                    <TextBlock Text="PL" FontSize="12"/>
                                                </Button>

                                                <Button Margin="3 5 3 5"  Height="30" Width="30"
                                            Visibility="{Binding IsNotCrashed, Converter={StaticResource BooleanToVisibilityConverterCustom}}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                        ToolTip="Bezwypadkowy: tak"
                                                >
                                                    <materialDesign:PackIcon HorizontalAlignment="Center"
                                                Kind="CarMultiple"
                                                Height="16"
                                                Width="16" />
                                                </Button>
                                                <Button Margin="3 5 3 5" Height="30" Width="30"
                                            Visibility="{Binding IsNotCrashed, Converter={StaticResource BooleanToVisibilityConverterCustom}, ConverterParameter=true}"
                                        Style="{StaticResource MaterialDesignFloatingActionMiniLightButton}"
                                            Background="Gray"
                                            BorderBrush="Gray"
                                        ToolTip="Bezwypadkowy: nie"
                                                >
                                                    <materialDesign:PackIcon HorizontalAlignment="Center"
                                                Kind="CarMultiple"
                                                Height="16"
                                                Width="16" />
                                                </Button>
                                            </StackPanel>

                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Cena" SortMemberPath="Offer.CurrentPrice.Value">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding Offer.CurrentPrice.Value}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Oferta&#x0a;od" SortMemberPath="[Oferta od]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding [Oferta od]}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Marka" SortMemberPath="[Marka pojazdu]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding [Marka pojazdu]}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Model" SortMemberPath="[Model pojazdu]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding [Model pojazdu]}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Rocznik" SortMemberPath="[Rok produkcji]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding [Rok produkcji]}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Przebieg" SortMemberPath="[Przebieg]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding [Przebieg]}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Pojemność" SortMemberPath="[Pojemność skokowa]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding [Pojemność skokowa]}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Moc" SortMemberPath="[Moc]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding [Moc]}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Pierwszy&#x0a;właściciel" SortMemberPath="[Pierwszy właściciel]">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding [Pierwszy właściciel]}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>


                            <DataGridTemplateColumn Header="Cechy" MaxWidth="500">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ItemsControl ItemsSource="{Binding DistinctFeatures}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel HorizontalAlignment="Stretch"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <materialDesign:Chip Content="{Binding Name}" Background="{Binding Path=Name, Converter={StaticResource StringToBrushConverter}}" Margin="0 3 3 0" FontSize="10"  FontWeight="SemiBold"
                                                             Height="28" Foreground="#c0000000"
                                                             />
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn Header="Odległość" SortMemberPath="Distance">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <materialDesign:Chip Content="{Binding Distance, Converter={StaticResource DistanceToKmConverter}}" Background="{DynamicResource PrimaryHueLightBrush}" Margin="2"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                        </DataGrid.Columns>
                    </DataGrid>
                </materialDesign:Card>

                <materialDesign:Snackbar Grid.Row="2" VerticalAlignment="Bottom"
                            MessageQueue="{Binding SnackbarMessageQueue}"
                            />
            </Grid>
        </DockPanel>
    </materialDesign:DrawerHost>

</views:MvxWpfView>
